create table "public"."link" (
    "id" bigint generated by default as identity not null,
    "description" text default ''::text,
    "target" text not null,
    "slug" uuid not null,
    "created_at" timestamp with time zone default now(),
    "user_id" uuid not null
);


alter table "public"."link" enable row level security;

CREATE UNIQUE INDEX link_pkey ON public.link USING btree (id);

CREATE UNIQUE INDEX link_slug_key ON public.link USING btree (slug);

alter table "public"."link" add constraint "link_pkey" PRIMARY KEY using index "link_pkey";

alter table "public"."link" add constraint "link_slug_key" UNIQUE using index "link_slug_key";

alter table "public"."link" add constraint "link_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) not valid;

alter table "public"."link" validate constraint "link_user_id_fkey";

create policy "Restrict access based on user_id"
on "public"."link"
as permissive
for all
to authenticated
using ((auth.uid() = user_id))
with check ((auth.uid() = user_id));



